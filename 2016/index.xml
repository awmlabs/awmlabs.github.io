<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2016s on AWM TechNotes</title>
    <link>http://blog.awm.jp/2016/</link>
    <description>Recent content in 2016s on AWM TechNotes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <lastBuildDate>Sat, 02 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog.awm.jp/2016/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blog の Deploy で Circle CI</title>
      <link>http://blog.awm.jp/2016/01/02/circleci/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/02/circleci/</guid>
      <description>

&lt;h1 id=&#34;blog-の-deploy-で-circle-ci:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Blog の Deploy で Circle CI&lt;/h1&gt;

&lt;p&gt;昨日の時点では Markdown ファイルの編集後に、make install する事でブログサイトに HTML をデプロイしますが、今回、Markdown を git commit したら自動でデプロイされるべく、Circle CI に連携の設定を入れました。&lt;/p&gt;

&lt;h1 id=&#34;はじめに:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;前回は、awmcorp に markdown 等の blog のソースを置いてましたが、権限設定が面倒なので、awmlabs アカウントにレポジトリをまとめました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;× &lt;a href=&#34;https://github.com/awmcorp/blog.awm.jp&#34;&gt;https://github.com/awmcorp/blog.awm.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;○ &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp&#34;&gt;https://github.com/awmlabs/blog.awm.jp&lt;/a&gt; blog のソース&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/awmlabs.github.io&#34;&gt;https://github.com/awmlabs/awmlabs.github.io&lt;/a&gt; blog の公開ファイル&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;circle-yaml:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;circle.yaml&lt;/h1&gt;

&lt;p&gt;連携時にどういうコマンドを実行するかの指定ですが、nobu666 神のファイルをコピペして、自分のとこに書き換えました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nobu666/nobu666.com/blob/master/circle.yml&#34;&gt;https://github.com/nobu666/nobu666.com/blob/master/circle.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp/blob/master/circle.yml&#34;&gt;https://github.com/awmlabs/blog.awm.jp/blob/master/circle.yml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;circle-ci-アカウント作成:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Circle CI アカウント作成&lt;/h1&gt;

&lt;p&gt;連携したい Github アカウントで Github にログインしておいて。Circle CI のページにアクセスして、Circle CI のページで SignUp すると連携用アカウントが作れるっぽいです。
 * &lt;a href=&#34;https://circleci.com/&#34;&gt;https://circleci.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;尚、Github で所属する組織(Organizatins)全てのアクセス権を要求するので、色んな組織に所属するようなアカウントでの連携は厳しい。という人は新しい Github アカウントを作って設定すると良いかも。&lt;/p&gt;

&lt;p&gt;Github API 的に組織ごとのオンオフ出来ないそうで。アカウント単位での認証だし仕方なさそう。あと組織(Organization) 側で Circle CI との連携は切る事も出来るので、融通が効く場合はそういう手もあるそうです。&lt;/p&gt;

&lt;h1 id=&#34;circle-ci-での連携設定:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Circle CI での連携設定&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Add Project で監視するレポジトリを選択します。&lt;/li&gt;
&lt;li&gt;Project Settings の Permissions (SSH, API, AWS のでなく、唯の Permissions) から Authorize ＞ Create and add とボタンを押してく。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/settings/applications&#34;&gt;https://github.com/settings/applications&lt;/a&gt; で連携を確認 (revoke 押すと面倒なので気をつけて)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(あと一手間あった気がするので、思い出したら後で追記します)&lt;/p&gt;

&lt;h1 id=&#34;異なる-github-アカウントでの連携-推測:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;異なる Github アカウントでの連携 (推測)&lt;/h1&gt;

&lt;p&gt;同じアカウントであれば。 Permission 設定でボタン一発ですが、アカウントが違うレポジトリの場合は、ssh-keygen -f id&lt;em&gt;rsa&lt;/em&gt;(アカウント名) で passphrase 空で作成して秘密鍵と公開鍵を、以下の URL に登録すれば出来そうな気もしますが、気のせいでした。
 * &lt;a href=&#34;https://circleci.com/gh/&#34;&gt;https://circleci.com/gh/&lt;/a&gt;&amp;lt;ユーザor組織名&amp;gt;/&amp;lt;リポジトリ名&amp;gt;/edit#ssh
 * &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt;&amp;lt;ユーザor組織名&amp;gt;/&amp;lt;リポジトリ名/settings/keys&lt;/p&gt;

&lt;p&gt;そのうち必要に迫られたら、もう少し試行錯誤します。&lt;/p&gt;

&lt;h1 id=&#34;備考:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;備考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;当初、作りたてのレポジトリが見えなくていつの間にか見えたので反映に時間がかかるのかと思いましたが、普通はすぐ反映されるそうです。謎です。&lt;/li&gt;
&lt;li&gt;別アカウントでの連携をしたかったけど、push で marked as read only のエラーの壁を越えられなかったので、そのうち挑戦したい。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Blog はじめました</title>
      <link>http://blog.awm.jp/2016/01/01/blog/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/01/blog/</guid>
      <description>

&lt;h1 id=&#34;blog-はじめました:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Blog はじめました&lt;/h1&gt;

&lt;p&gt;WordPressを試したり色々と迷いましたが、神の啓示に従い Github.io + Hugo + CircleCI の構成にしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/nobu666/status/680683739534393344&#34;&gt;https://twitter.com/nobu666/status/680683739534393344&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CircleCI 対応は時間かかりそうなので、デプロイはとりあえず手動対処にして試行錯誤した結果が以下のレポジトリです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt; &lt;a href=&#34;https://github.com/awmcorp/blog.awm.jp&#34;&gt;https://github.com/awmcorp/blog.awm.jp&lt;/a&gt; &lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;ins&gt; &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp&#34;&gt;https://github.com/awmlabs/blog.awm.jp&lt;/a&gt; (CircleCI連携の都合で、レポジトリを移動しました)&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;github-io:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Github.io&lt;/h1&gt;

&lt;p&gt;github.com で &amp;lt;ユーザ名&amp;gt;.github.io というレポジトリを作れば、その URL でアクセス出来ます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/awmlabs.github.io&#34;&gt;https://github.com/awmlabs/awmlabs.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; &lt;a href=&#34;https://awmlabs.github.io/&#34;&gt;https://awmlabs.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここにブログを表示する静的なHTMLを入れていけば良い訳です。
Markdown ファイルからBlogサイトのHTMLを生成するツールは Hugo を使ってみました。&lt;/p&gt;

&lt;h2 id=&#34;blog-awm-jp-を公開urlにしたい:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;blog.awm.jp を公開URLにしたい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;=&amp;gt; &lt;a href=&#34;https://blog.awm.jp/&#34;&gt;https://blog.awm.jp/&lt;/a&gt; (awmlabs.github.io を指します)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DNS の CNAME で blog.awm.jp =&amp;gt; awmlabs.github.io を向けた上で、static/CNAME に blog.awm.jp の文字を入れておくと awmlabs.github.io でアクセスしても blog.awm.jp にリダイレクトするようです。&lt;/p&gt;

&lt;h1 id=&#34;hugo:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Hugo&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site blog.awm.jp
$ cd blog.awm.jp
$ hugo new 2016/01/01/blog.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のようにすると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog.awm.jp/content/2016/01/01/blog.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;にテンプレートの md ファイルが出来るので、そこに文章を記述して、blog.awm.jp フォルダのトップで、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行します。すると public 以下に表示用の HTMLファイルが生成されます。 実際に表示する為には、テーマが必要です。&lt;/p&gt;

&lt;h2 id=&#34;hugo-themes:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Hugo themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;
ここで色々なテーマが確認できます。一目惚れした base16 を適用しました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/base16/&#34;&gt;http://themes.gohugo.io/base16/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;git submodule add git@github.com:htdvisser/hugo-base16-theme.git themes/base16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として持ってきます。尚、大抵のカスタマイズはトップのlayouts や static/css 以下で弄れるので、fork しなくても良さそうです。&lt;/p&gt;

&lt;p&gt;後は、先ほど hugo を実行したのと同じ要領で、更に server -watch オプションをつけると、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo  server --watch -t base16
＜略＞
Web Server is available at http://127.0.0.1:1313/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように &lt;a href=&#34;http://127.0.0.1:1313/&#34;&gt;http://127.0.0.1:1313/&lt;/a&gt; で表示が確認できます。
md ファイルを編集するとリアルタイムに反映してくれて便利です。(これが出来なかったら hugo を使おうとしなかった位、大事な機能)&lt;/p&gt;

&lt;p&gt;尚、config.toml (又は config.yaml) で theme を定義すれば -t base16 は不要です。&lt;/p&gt;

&lt;h2 id=&#34;syntax-highlight:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Syntax Highlight&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;pip install Pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、Pygments を入れて。config.toml に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pygmentsuseclasses = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を入れるだけで OK です。&lt;/p&gt;

&lt;h2 id=&#34;テーマの文字:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;テーマの文字&lt;/h2&gt;

&lt;p&gt;base16 は文字が読み辛いので自分好みに変更しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;記事の背景色 (少し明るくした)&lt;/li&gt;
&lt;/ul&gt;


article.single section,
.article-list article {
;  background-color: #f2f0ec;
  background-color: #fcf8f0;


&lt;ul&gt;
&lt;li&gt;文字フォント (Windows で見た時に MS ゴシックが使われないように)&lt;/li&gt;
&lt;/ul&gt;


body {
   ＜略＞
  font-family: &#34;Hiragino Kaku Gothic ProN&#34;, Meiryo, Tahoma, Verdana, Arial, sans-serif;
;  font-family: &#39;Source Code Pro&#39;, monospace;
}


&lt;h1 id=&#34;circleci:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;CircleCI&lt;/h1&gt;

&lt;p&gt;間に合わなかったので、また今度。。&lt;/p&gt;

&lt;p&gt;(2016/01/02 追記) &amp;gt; &lt;a href=&#34;http://blog.awm.jp/2016/01/02/circleci/&#34;&gt;http://blog.awm.jp/2016/01/02/circleci/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;備考:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;備考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Circle CI のアカウント作成で Github と連携する際に「所属する組織全てのアクセス権限」を要求する(Github API の仕様上、組織毎にオンオフ出来ない)ので、自分が管理する組織にのみ所属するアカウント (awmlabs) を使う事にしました。&lt;/li&gt;
&lt;li&gt;当初、改行がされないと思ったけど、サマリーの方は改行無しで、記事のページに飛んだらちゃんと改行されてました。早とちり。&lt;/li&gt;
&lt;li&gt;色々なテーマを試そうとするとエラーがよく出ます。テーマ毎に md ファイルの先頭で必要な定義が違うみたいで、ちゃんとテーマの README を読んで設定しましょう。&lt;/li&gt;
&lt;li&gt;new 〜.md で作ったテンプレファイルでは draft = true になっているので、これを消すか false にしないと記事を表示しません。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考-url:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;参考 URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nobu666/nobu666.com&#34;&gt;https://github.com/nobu666/nobu666.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847&#34;&gt;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>