<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ImageMagick on awm-Tech</title>
    <link>https://awmlabs.github.io/categories/imagemagick/</link>
    <description>Recent content in ImageMagick on awm-Tech</description>
    <generator>Hugo</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <lastBuildDate>Sun, 06 Aug 2017 11:59:20 +0900</lastBuildDate>
    <atom:link href="https://awmlabs.github.io/categories/imagemagick/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ImageMagick で ICC プロファイルを扱う #3 コマンド解説</title>
      <link>https://awmlabs.github.io/2017/08/06/imicc/</link>
      <pubDate>Sun, 06 Aug 2017 11:59:20 +0900</pubDate>
      <guid>https://awmlabs.github.io/2017/08/06/imicc/</guid>
      <description>はじめに このエントリの続きです。 ImageMagick で ICC プロファイルを扱う #2 コマンド実行例 〜 JPEG のメタデータ削除 http://blog.awm.jp/2017/06/11/imicc/ ImageMagick で JPEG に埋め込まれた ICC プロファイルを操作する JPEG</description>
    </item>
    <item>
      <title>ImageMagick で ICC プロファイルを扱う #2 コマンド実行例 〜  JPEG のメタデータ削除</title>
      <link>https://awmlabs.github.io/2017/06/11/imicc/</link>
      <pubDate>Sun, 11 Jun 2017 01:13:05 +0900</pubDate>
      <guid>https://awmlabs.github.io/2017/06/11/imicc/</guid>
      <description>はじめに 色域って何？ ICC プロファイルって何？という人は、 前置きのエントリをどうぞ。 ImageMagick で ICC プロファイルを扱う #1 前置き http://blog.awm.jp/2017/06/10/imicc/ 本エントリでは、Image</description>
    </item>
    <item>
      <title>ImageMagick で ICC プロファイルを扱う #1 前置き</title>
      <link>https://awmlabs.github.io/2017/06/10/imicc/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://awmlabs.github.io/2017/06/10/imicc/</guid>
      <description>はじめに 前置きは要らない。ImageMagick コマンドの実行例を知りたいという人は、次のエントリをどうぞ。 ImageMagick で ICC プロファイルを扱う #2 コマン</description>
    </item>
    <item>
      <title>ImageMagick 6.9.7-7 から policy の挙動が変わりました</title>
      <link>https://awmlabs.github.io/2017/02/09/imagemagick/</link>
      <pubDate>Thu, 09 Feb 2017 20:59:11 +0900</pubDate>
      <guid>https://awmlabs.github.io/2017/02/09/imagemagick/</guid>
      <description>はじめに ImageMagick は組み込みコーデックで100種類以上、外部コマンド利用を含めると200種以上の画像形式をサポートしています。この中の一つでも脆弱性</description>
    </item>
    <item>
      <title>Behavior of policy changed from ImageMagick 6.9.7-7</title>
      <link>https://awmlabs.github.io/2017/02/09/imagemagick-en/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://awmlabs.github.io/2017/02/09/imagemagick-en/</guid>
      <description>Introduction ImageMagick supports over hundred types of image formats. Even if one of them is vulnerable, it will be vulnerable to ImageMagick, so we need care to avoid accepting unnecessary image formats. Normally, we use policy.xml 1 in the setting file to instruct permission(OK)/non-permission(NG) for each image format(domain=coder).&#xA;From ImageMagick 6.9.7-7, how to apply the condition rule set in policy.xml has changed.&#xA;ImageMagick 6.9.7-6 NG if there is even one NG (false winning) ImageMagick 6.</description>
    </item>
    <item>
      <title>ImageMagick の policy.xml でホワイトリスト？</title>
      <link>https://awmlabs.github.io/2016/11/07/policy/</link>
      <pubDate>Mon, 07 Nov 2016 23:51:30 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/11/07/policy/</guid>
      <description>追記 (2018/11/20) ImageMagick 6.9.7-7 で policy.xml がホワイトリストに対応しました。 ImageMagick 6.9.7-7 から policy の挙動が変わりました https://blog.awm.jp/2017/02/09/imagemagick/ policy.xml ImageMagick は etc ディレクトリの policy.xml を見て、色んな制御ができます。 $ convert -list configure</description>
    </item>
    <item>
      <title>RGBA4444 変換で劣化しない画像を ImageMagick で作る</title>
      <link>https://awmlabs.github.io/2016/07/22/rgba4444/</link>
      <pubDate>Fri, 22 Jul 2016 09:10:28 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/07/22/rgba4444/</guid>
      <description>RGBA4444 変換で劣化しない画像を ImageMagick で作る RGB444 変換で劣化しない画像を ImageMagick で作る http://blog.awm.jp/2016/07/21/rgb444/ 前回の記事では RGBA4444 のディザに失敗しました。ImageMagick は透明度を含</description>
    </item>
    <item>
      <title>RGB444 変換で劣化しない画像を ImageMagick で作る</title>
      <link>https://awmlabs.github.io/2016/07/21/rgb444/</link>
      <pubDate>Thu, 21 Jul 2016 21:28:11 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/07/21/rgb444/</guid>
      <description>RGB444 変換で劣化しない画像を ImageMagick で作る 詳しい話は以下のサイトに任せるとして、 Unityやるには必須！RGBA画像減色の基礎をまじめに書いてみた http://design.kayac.com/topics/2014/02/unity-RGBA4444.php P</description>
    </item>
    <item>
      <title>透明度を含む画像を JPEG に変換する時の背景色</title>
      <link>https://awmlabs.github.io/2016/01/25/flatten/</link>
      <pubDate>Mon, 25 Jan 2016 02:01:09 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/25/flatten/</guid>
      <description>透明度を含む画像を JPEG に変換する時の背景色 もうサムネイルで泣かないための ImageMagick ノウハウ集 http://blog.cybozu.io/entry/2016/01/06/080000 透過画像をそのまま JPEG に変換すると背景色が黒になるので、 白</description>
    </item>
    <item>
      <title>ImageMagick で画像を比較する</title>
      <link>https://awmlabs.github.io/2016/01/25/diff/</link>
      <pubDate>Mon, 25 Jan 2016 01:51:23 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/25/diff/</guid>
      <description>ImageMagick で画像を比較する もうサムネイルで泣かないための ImageMagick ノウハウ集 http://blog.cybozu.io/entry/2016/01/06/080000 サムネイル周りに何か修正を入れたら修正前後の画像を比較しましょう。 機械によるバ</description>
    </item>
    <item>
      <title>もうサムネイルで泣かないための ImageMagick ノウハウ集に一言</title>
      <link>https://awmlabs.github.io/2016/01/25/imagemagick/</link>
      <pubDate>Mon, 25 Jan 2016 00:32:35 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/25/imagemagick/</guid>
      <description>もうサムネイルで泣かないための ImageMagick ノウハウ集に一言 発表スライドだと URL のリンクが辿りにくいのとブログ形式で読みたいとの声があり、ほぼ同じ内容のエ</description>
    </item>
    <item>
      <title>JPEG の size hinting について</title>
      <link>https://awmlabs.github.io/2016/01/08/jpeghint/</link>
      <pubDate>Fri, 08 Jan 2016 23:40:32 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/08/jpeghint/</guid>
      <description>何度もしつこいですが、以下の記事の -define jpeg:size への勝手な補足。 もうサムネイルで泣かないための ImageMagick ノウハウ集 http://blog.cybozu.io/entry/2016/01/06/080000 いつでもつければ良いというものではないので</description>
    </item>
    <item>
      <title>ImageMagick の -auto-orient でオフセットがズレる件</title>
      <link>https://awmlabs.github.io/2016/01/06/orient/</link>
      <pubDate>Wed, 06 Jan 2016 19:52:03 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/06/orient/</guid>
      <description>-auto-orient でオフセットがズレる件 例のエントリにもう一件便乗。 もうサムネイルで泣かないための ImageMagick ノウハウ集 http://blog.cybozu.io/entry/2016/01/06/080000 ただ、ImageMagick といえど Orientation 画像の</description>
    </item>
    <item>
      <title>グレー形式JPEGをPNGに変換すると暗くなる件</title>
      <link>https://awmlabs.github.io/2016/01/06/gray/</link>
      <pubDate>Wed, 06 Jan 2016 16:27:11 +0900</pubDate>
      <guid>https://awmlabs.github.io/2016/01/06/gray/</guid>
      <description>グレー形式JPEGをPNGに変換すると暗くなる件 画像サムネール界隈で話題のエントリ もうサムネイルで泣かないための ImageMagick ノウハウ集 http://blog.cybozu.io/entry/2016/01/06/080000 -limit memory でのリソー</description>
    </item>
  </channel>
</rss>
