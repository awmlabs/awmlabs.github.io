<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tiff on awm-Tech</title>
    <link>https://blog.awm.jp/tags/tiff/</link>
    <description>Recent content in Tiff on awm-Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <lastBuildDate>Sun, 06 Nov 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.awm.jp/tags/tiff/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>TIFF と Exif と JPEG</title>
      <link>https://blog.awm.jp/2016/11/06/tiff/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.awm.jp/2016/11/06/tiff/</guid>
      <description>

&lt;h1 id=&#34;jpeg-と-exif-と-tiff-の関係:5972b361355938e744b0d7681dd7c7fa&#34;&gt;JPEG と Exif と TIFF の関係&lt;/h1&gt;

&lt;p&gt;TIFF は独立した画像フォーマットの一種ですが、メタ構造をタグで扱う形式の使い勝手が良い為か、JPEG の Exif も TIFF フォーマットをそのまま使っています。&lt;/p&gt;

&lt;p&gt;だいたい以下のような関係です。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../figure01.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;昨日作った IO_TIFF ライブラリは、JPEG, Exif, TIFF のいずれのファイルを渡されても、TIFF の部分だけ参照してダンプします。&lt;/p&gt;

&lt;h1 id=&#34;実装:5972b361355938e744b0d7681dd7c7fa&#34;&gt;実装&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yoya/IO_TIFF&#34;&gt;https://github.com/yoya/IO_TIFF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IO/TIFF.php の parse function の先頭です。&lt;/p&gt;

&lt;h2 id=&#34;tiff-をとりこむ:5972b361355938e744b0d7681dd7c7fa&#34;&gt;TIFF をとりこむ&lt;/h2&gt;

&lt;p&gt;TIFF ファイルが渡された場合はそのまま取り込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if ($head2 === &amp;quot;II&amp;quot; || $head2 === &amp;quot;MM&amp;quot;) { // TIFF format
    $bit-&amp;gt;input($tiffData);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;exif-を取り込む:5972b361355938e744b0d7681dd7c7fa&#34;&gt;Exif を取り込む&lt;/h2&gt;

&lt;p&gt;Exit ファイルが渡された場合は、先頭6バイトを読み飛ばします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;} else if ($head6 === &amp;quot;Exif\0\0&amp;quot;) { // Exif format
    $bit-&amp;gt;input(substr($tiffData, 6));
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;jepg-を取り込む:5972b361355938e744b0d7681dd7c7fa&#34;&gt;JEPG を取り込む&lt;/h2&gt;

&lt;p&gt;これは少し厄介です。JPEG の Chunk を APP1 が出るまで読み飛ばし、APP1 の先頭を削って Exif 内の TIFF 形式の場所を抜き出します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;} else if ($head2 === &amp;quot;\xff\xd8&amp;quot;) { // JPEG format
    $jpegBit = new IO_Bit();
    $jpegBit-&amp;gt;input($tiffData);
    $jpegBit-&amp;gt;setOffset(2, 0); // skip SOI
    $found = false;
    while ($jpegBit-&amp;gt;getUI8() == 0xff) { // chunk marker
        $marker2 = $jpegBit-&amp;gt;getUI8();
        $len = $jpegBit-&amp;gt;getUI16BE();
        if ($marker2 === 0xe1) { // APP1
            if ($jpegBit-&amp;gt;getData(6) === &amp;quot;Exif\0\0&amp;quot;) {
                $found = true;
                break;
            }
        }
        $jpegBit-&amp;gt;incrementOffset($len - 2, 0);
    }
    list($offset, $dummy) = $jpegBit-&amp;gt;getOffset();
    if ($found === false) {
        throw new Exception(&amp;quot;Illegal JPEG format. offset: $offset&amp;quot;);
    }
    $bit-&amp;gt;input(substr($tiffData, $offset));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まぁ、でもバイナリのコンテナ分解に慣れると一瞬でかける処理です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TIFF フォーマットの分解</title>
      <link>https://blog.awm.jp/2016/11/05/tiff/</link>
      <pubDate>Sat, 05 Nov 2016 23:00:11 +0900</pubDate>
      
      <guid>https://blog.awm.jp/2016/11/05/tiff/</guid>
      <description>

&lt;h1 id=&#34;tiff-フォーマットの分解:5972b361355938e744b0d7681dd7c7fa&#34;&gt;TIFF フォーマットの分解&lt;/h1&gt;

&lt;p&gt;最近調べている DNG が TIFF の形式という事で、折角なので TIFF を分解してみました。(PHP で)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yoya/IO_TIFF&#34;&gt;https://github.com/yoya/IO_TIFF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;tiff-フォーマット仕様:5972b361355938e744b0d7681dd7c7fa&#34;&gt;TIFF フォーマット仕様&lt;/h1&gt;

&lt;p&gt;仕様はこちらですが、いきなり読むのは辛いはずです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://partners.adobe.com/public/developer/en/tiff/TIFF6.pdf&#34;&gt;https://partners.adobe.com/public/developer/en/tiff/TIFF6.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こちらの Exif 解説の方がイメージが掴めるでしょう。 klab さん有難う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exif データにアクセスするコードを自作してみる

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dsas.blog.klab.org/archives/52123322.html&#34;&gt;http://dsas.blog.klab.org/archives/52123322.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exif は TIFF のフォーマットを利用していて、先頭 6byte &amp;ldquo;Exif\0\0&amp;rdquo; を除けば、TIFF として読めます。
但し、古いバージョンを使うので TIFF としては少しだけ物足りないです。(特に浮動小数点を扱わないとこ)&lt;/p&gt;

&lt;h1 id=&#34;大雑把なイメージ:5972b361355938e744b0d7681dd7c7fa&#34;&gt;大雑把なイメージ&lt;/h1&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../figure01.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;注意点として、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;count が指定する数分 offset が後ろに何個も並ぶ&lt;/li&gt;
&lt;li&gt;type が使うバイト数xcount が 4byte に収まる場合は、offset フィールドに実データを入れてしまう。&lt;/li&gt;
&lt;li&gt;4byte に入りきらない場合は、offset 値として IFD 以外のエリアに置かれたデータの場所を指す&lt;/li&gt;
&lt;li&gt;DNG は新しい TIFF の仕様を使っていて、Exif にない type (11:float, 12:double) を使う。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;php-で分解:5972b361355938e744b0d7681dd7c7fa&#34;&gt;PHP で分解&lt;/h1&gt;

&lt;p&gt;という訳で、こちらが成果物です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yoya/IO_TIFF&#34;&gt;https://github.com/yoya/IO_TIFF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例によって IO_Bit を使ってます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yoya/IO_Bit&#34;&gt;https://github.com/yoya/IO_Bit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DNG で追加されたタグIDと名前の対応表がないので表示が中途半端ですが、一応、分解はできてます。(Raw IFD が見えてないですが。。)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php sample/tiffdump.php  -nf test/APC_0025.dng
ByteOrder:II(LittleEndian)
TIFFVersion:0x002A
IFD:0th
    BaseOffset:8 BaseSize:710
    ExtendOffset:722 ExtendSize:133698
    TagTable:(count=59)
        0x00FE((Unknown)): Type:LONG Count:1 Data: [0]1
        0x0100(ImageWidth): Type:LONG Count:1 Data: [0]256
        0x0101(ImageLength): Type:LONG Count:1 Data: [0]192
        0x0102(BitsPerSample): Type:SHORT Count:3 Offset:722 Data: [0]8 [1]0 [2]8
        0x0103(Compression): Type:SHORT Count:1 Data: [0]1
        0x0106(PhotometricInterpretation): Type:SHORT Count:1 Data: [0]2
        0x010F(Make): Type:ASCII Count:6 Offset:728 Data:Apple
        0x0110(Model): Type:ASCII Count:14 Offset:734 Data:iPhone 7 Plus
        0x0111(StripOffsets): Type:LONG Count:1 Data: [0]138956
        0x0112(Orientation): Type:SHORT Count:1 Data: [0]1
        0x0115(SamplesPerPixel): Type:SHORT Count:1 Data: [0]3
        0x0116(RowsPerStrip): Type:LONG Count:1 Data: [0]192
        0x0117(StripByteCounts): Type:LONG Count:1 Data: [0]147456
        0x011C(PlanarConfiguration): Type:SHORT Count:1 Data: [0]1
        0x0131(Software): Type:ASCII Count:42 Offset:748 Data:Adobe Photoshop Lightroom 6.7 (Macintosh)
        0x0132(DateTime): Type:ASCII Count:20 Offset:790 Data:2016:11:04 19:40:39
        0x014A((Unknown)): Type:LONG Count:4 Offset:810 Data: [0]134420 [1]136510 [2]136902 [3]137484
＜略＞
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;todo:5972b361355938e744b0d7681dd7c7fa&#34;&gt;TODO&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;DNG 新規タグは Raw IFD テーブルに多く入るみたいですが、その tag id が謎なので、もうちょっと調べます。。&lt;/li&gt;
&lt;li&gt;FLOAT と DOUBLE の読み出しがまだ怪しいので、そのうち直します。&lt;/li&gt;
&lt;li&gt;build 処理も書いたけど多分動作しません。フィルタ実装が最終目的なので、そのうち対応します。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNG 画像のフォーマット (コンテナ編)</title>
      <link>https://blog.awm.jp/2016/11/04/dng/</link>
      <pubDate>Fri, 04 Nov 2016 23:14:09 +0900</pubDate>
      
      <guid>https://blog.awm.jp/2016/11/04/dng/</guid>
      <description>

&lt;h1 id=&#34;dng-仕様書:e23322f8f0faf6ac6a702f3fbee1c037&#34;&gt;DNG 仕様書&lt;/h1&gt;

&lt;p&gt;Adobe DNG ヘルプにリンクがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://helpx.adobe.com/jp/photoshop/digital-negative.html&#34;&gt;https://helpx.adobe.com/jp/photoshop/digital-negative.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wwwimages.adobe.com/content/dam/Adobe/en/products/photoshop/pdfs/dng_spec_1.4.0.0.pdf&#34;&gt;http://wwwimages.adobe.com/content/dam/Adobe/en/products/photoshop/pdfs/dng_spec_1.4.0.0.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;TIFF Compatible
DNG is an extension of the TIFF 6.0 format, and is compatible with the TIFF-EP standard. It
is possible (but not required) for a DNG file to simultaneously comply with both the Digital
Negative specification and the TIFF-EP standard.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TIFF のフォーマットを用いて、新たな DNG 用タグを追加する方式です。
例えば、ImageMagick に TIFF として読ませようとすると。以下のように知らないタグの警告が出ます。(DNG として読ませようとすると PNG に変換して identify するので駄目です)&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../identity-dngAsTiff.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;尚、ExifTool は DNG のタグに対応しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/DNG.html&#34;&gt;http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/DNG.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../exiftool01.png&#34; /&gt; &lt;/center&gt;
&lt;center&gt; &lt;img src=&#34;../exiftool02.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;尚、GPSInfoの座標は神奈川県の相模原公園です。&lt;/p&gt;

&lt;h1 id=&#34;編集の設定値:e23322f8f0faf6ac6a702f3fbee1c037&#34;&gt;編集の設定値&lt;/h1&gt;

&lt;p&gt;Lightroom や Photoshop で&amp;rdquo;現像&amp;rdquo;する際に、色温度やホワイトバランス、露光量等を指定できますが。保存時のダイヤログを見ると DNG 自体に設定値を保存するようです。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../saveMetadata.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Lightroom で編集して実験してみます。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;a href=&#34;../photoshop-colortemp.png&#34;&gt; &lt;img src=&#34;../photoshop-colortemp-h.png&#34; /&gt; &lt;/a&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;さて ExifTool で DNG タグを確認。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../exiftool-colortemp.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;確かに値が書き換わってます。&lt;/p&gt;

&lt;h1 id=&#34;history-タグ:e23322f8f0faf6ac6a702f3fbee1c037&#34;&gt;History タグ&lt;/h1&gt;

&lt;p&gt;Lightroom で誤って JPEG 画像を指定して DNG 出力してしまった場合、このタグに記録が残ります。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../historyTag.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;便利ですね！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>