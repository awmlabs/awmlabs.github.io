<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guetzli on awm-Tech</title>
    <link>https://blog.awm.jp/tags/guetzli/index.xml</link>
    <description>Recent content in Guetzli on awm-Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <atom:link href="https://blog.awm.jp/tags/guetzli/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Guetzli - Perceptual JPEG encoder</title>
      <link>https://blog.awm.jp/2017/03/17/guetzli/</link>
      <pubDate>Fri, 17 Mar 2017 17:34:14 +0900</pubDate>
      
      <guid>https://blog.awm.jp/2017/03/17/guetzli/</guid>
      <description>

&lt;h1 id=&#34;公式サイト&#34;&gt;公式サイト&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guetzli&#34;&gt;https://github.com/google/guetzli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Announcing Guetzli: A New Open Source JPEG Encoder

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://research.googleblog.com/2017/03/announcing-guetzli-new-open-source-jpeg.html&#34;&gt;https://research.googleblog.com/2017/03/announcing-guetzli-new-open-source-jpeg.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Guetzli は知覚的(Perceptual)に人間が見ても分からないだろうギリギリまで画像を劣化させるチキンレース技術です。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;人間が見ても。という部分は画質評価ツールの Butteraugli を使います。論文では MSE, PNSR, SSIM をよく見かけますが、これらは結構雑な評価で、Butteraugli は人間の視覚特性(例えば輝度と色味は別指標、色味も反対色説の色差軸)を考慮します。
&lt;center&gt;
&lt;img src=&#34;../opponent-color.jpg&#34; /&gt; &lt;br /&gt;
&amp;copy; &lt;a href=&#34;http://ieeexplore.ieee.org/ieee_pilot/articles/06/ttg2009061291/article.html&#34;&gt;http://ieeexplore.ieee.org/ieee_pilot/articles/06/ttg2009061291/article.html&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;JPEG quality を色々弄って画像サイズと画質のトレードオフで決める事はよくありますが、それの全自動版です。更に DQT (周波数成分毎の量子化パラメータ) を細かくいじります。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;良い結果が出るよう何度も繰り返し JPEG 生成処理をする方式なので、とにかく時間がかかります。libjpeg の代わりという訳にはいかないでしょう。アクセスが特別多い重要な画像に対してサイズを少しでも減らしたい。zopflipng のような使い方になりそうです。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;制限事項&#34;&gt;制限事項&lt;/h1&gt;

&lt;p&gt;ソースを読んでいて気づいた制限事項です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;YCbCr JPEG のみ対応です。CMYK や CYYK は未対応。

&lt;ul&gt;
&lt;li&gt;参考1) &lt;a href=&#34;https://blog.awm.jp/2016/02/06/ycbcr/&#34;&gt;https://blog.awm.jp/2016/02/06/ycbcr/&lt;/a&gt; YCbCr について&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;YUV444, 420 のみ。422,411,440 は駄目。

&lt;ul&gt;
&lt;li&gt;参考2) &lt;a href=&#34;https://blog.awm.jp/2016/02/10/yuv/&#34;&gt;https://blog.awm.jp/2016/02/10/yuv/&lt;/a&gt; YUV の種類&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;うーん。YUV422 の JPEG は世に溢れてるはずだけど、大丈夫なのでしょうか。420 なんかよりずっと多そうだけど。デジカメで普通の画質設定だと 422 になりそうです。(自分は高画質しか興味ないので、よく分からない)&lt;/p&gt;

&lt;p&gt;あと、ICC プロファイルを引き継がないという噂がありますが、自分が試した限りでは引き継ぎます。ソースコードを見ても確かにコピーする処理があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考) &lt;a href=&#34;https://twitter.com/yoya/status/843085874036334593&#34;&gt;https://twitter.com/yoya/status/843085874036334593&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どなたか引き継がない JPEG ファイルをお持ちでしたら頂けないでしょうか。(修正コミットしてコントリビュータに紛れ込みたい！)&lt;/p&gt;

&lt;h1 id=&#34;インストール&#34;&gt;インストール&lt;/h1&gt;

&lt;p&gt;macOS だと brew install guetzli で入りますが、一応 git レポジトリを使う方法のメモです。
libpng(libpng-dev) と gflags (libgflags-dev) のパッケージを入れて make するだけです。macOS Sierra と Linux Ubuntu16 で動作しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% git clone git@github.com:google/guetzli.git
% cd guetzli
% make
==== Building guetzli (release) ====
Creating bin/Release
Creating obj/Release
＜略＞
butteraugli.cc
Linking guetzli
ld: warning: option -s is obsolete and being ignored
% ls -l bin/Release/guetzli
-rwxr-xr-x  1 yoya  staff  280856  3 17 17:34 bin/Release/guetzli
% 
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;実験&#34;&gt;実験&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;% ls illust | wc
   1406    1406   26445
% mkdir tmp
% cd illust
% (for i in *.jpg ; do o=&amp;quot;../tmp/$i&amp;quot; ; identify $i ; time guetzli $i $o ; identify $o ; done &amp;gt;&amp;amp; ../log.txt ) &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ログデータ&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;3b689cd9.jpg JPEG 500x375 500x375+0+0 8-bit sRGB 59.4KB 0.000u 0:00.000

real	0m7.194s
user	0m6.976s
sys	0m0.212s
../tmp/3b689cd9.jpg JPEG 500x375 500x375+0+0 8-bit sRGB 56KB 0.000u 0:00.000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;集計スクリプト&#34;&gt;集計スクリプト&lt;/h2&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;filesizeUnit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($filesize,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$unit)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #75715e&#34;&gt;// to    KB&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;($unit&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;KB&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;($unit&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;MB&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1024&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;($unit&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;GB&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1024&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ERROR: $filesize, $unit\n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(file($argv[&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$line)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(preg_match(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/^([^\/]+.jpg) JPEG (\d+)x(\d+) \S+ \S+ \S+ ([0-9\.]+)(.B)/\&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$line,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches))&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($all,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$file,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$width,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$height,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$unit)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$nPixel&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$width&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$height;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$size&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;sqrt($nPixel);&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;filesizeUnit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($filesize,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$unit);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(preg_match(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/^user\s+(\d+)m([\d\.]+)s/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$line,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches))&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($all,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$minutes,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$seconds)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$t&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$minutes&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$seconds;&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;($t&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #75715e&#34;&gt;// echo &amp;quot;ERROR: $size $t\n&amp;quot;;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #75715e&#34;&gt;//  echo &amp;quot;$size,$t\n&amp;quot;;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(preg_match(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/^\.\.\/tmp\/([^\/]+.jpg) JPEG (\d+)x(\d+) \S+ \S+ &lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;S+ ([0-9\.]+)(.B)/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$line,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches))&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($all,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$file,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$width,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$height,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize2,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$unit)&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$matches;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize2&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;filesizeUnit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;($filesize2,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$unit);&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;$filesize,$filesize2\n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
          &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;($filesize&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$filesize2)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
               &lt;span style=&#34;color: #66d9ef&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;手元にある2Dイラスト画像1406枚で Guetzli を動かして計測したグラフです。
何枚か制限事項に引っかかるようで、実際に処理できたのは 1360枚です。&lt;/p&gt;

&lt;h2 id=&#34;グラフ&#34;&gt;グラフ&lt;/h2&gt;

&lt;h3 id=&#34;処理時間&#34;&gt;処理時間&lt;/h3&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../time-graph-small.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;横がsqrt(width*height) 。正方形と仮定した場合の一辺の長さ相当&lt;/li&gt;
&lt;li&gt;縦が user 時間の秒数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一辺2000px で100秒弱〜200秒が目安になりそうです。&lt;/p&gt;

&lt;p&gt;ちなみにそこそこ高性能なゲームPCで実験してます。&lt;/p&gt;

&lt;h3 id=&#34;ファイルサイズ削減&#34;&gt;ファイルサイズ削減&lt;/h3&gt;

&lt;p&gt;ちょっと異常な削減率ですね。半分以下になることさえあります。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../filesize-graph-small.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;削減率の多い画像を目視で確認しても、ぱっと見で違いは分かりませんでした。凄い。&lt;/p&gt;

&lt;h1 id=&#34;最後に&#34;&gt;最後に&lt;/h1&gt;

&lt;p&gt;イラスト画像は線とグラデーションが命だと考えるとは周波数の中域は荒くて良さそうで、視覚特性以外でも削れる情報があるとかで、実な効果が大きいのかもしれません。&lt;/p&gt;

&lt;p&gt;Guetzli で処理するとデータの劣化はするので、例えば画像を引き伸ばした時や画像にフィルタをかけた時に、違いが目に見える可能性があります。チキンレースで崖の位置が変われば当然落ちますし。画質評価で設定するその崖の位置は、モニタのDPI、視距離、測色標準観察者の種類といった想定する視聴環境のモデル次第です。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>