<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Format on awm-Tech</title>
    <link>https://blog.awm.jp/tags/format/</link>
    <description>Recent content in Format on awm-Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <lastBuildDate>Tue, 26 Jan 2016 14:55:42 +0900</lastBuildDate>
    <atom:link href="https://blog.awm.jp/tags/format/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ImageMagick で PNG の形式を変換</title>
      <link>https://blog.awm.jp/2016/01/26/png/</link>
      <pubDate>Tue, 26 Jan 2016 14:55:42 +0900</pubDate>
      
      <guid>https://blog.awm.jp/2016/01/26/png/</guid>
      <description>

&lt;h1 id=&#34;imagemagick-で-png-の形式を変換:418c06c92c8215b52bf45f50bda544bf&#34;&gt;ImageMagick で PNG の形式を変換&lt;/h1&gt;

&lt;p&gt;PNG は同じように見える画像でも、バイナリ的に色んな形式で表現できます。ImageMagick でそれらの形式に変換する方法を並べてみます。&lt;/p&gt;

&lt;h1 id=&#34;カラータイプ:418c06c92c8215b52bf45f50bda544bf&#34;&gt;カラータイプ&lt;/h1&gt;

&lt;p&gt;PNG は以下の5種類のカラータイプがあります。仕様書からコピペします。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Color  Type&lt;/th&gt;
&lt;th&gt;Allowed Bit Depths&lt;/th&gt;
&lt;th&gt;Interpretation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1,2,4,8,16&lt;/td&gt;
&lt;td&gt;Each pixel is a grayscale sample.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;Each pixel is an R,G,B triple.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1,2,4,8&lt;/td&gt;
&lt;td&gt;Each pixel is a palette index; a PLTE chunk must appear.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;Each pixel is a grayscale sample, followed by an alpha sample.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;Each pixel is an R,G,B triple, followed by an alpha sample.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;日本語に訳しつつ、いくつか情報を追記してみます。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;カラー型&lt;/th&gt;
&lt;th&gt;ビット&lt;br /&gt;深度&lt;/th&gt;
&lt;th&gt;PLTE&lt;/th&gt;
&lt;th&gt;tRNS&lt;/th&gt;
&lt;th&gt;ピクセル値の解釈&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1,2,4,8,16&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../png-pixel-type0.png&#34; /&gt; グレースケール&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../png-pixel-type2.png&#34; /&gt; R,G,B (PNG24)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1,2,4,8&lt;/td&gt;
&lt;td&gt;必須○&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../png-pixel-type3.png&#34; /&gt; インデックスカラー。(PNG8)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../png-pixel-type4.png&#34; /&gt; グレースケールの後ろにアルファ値。つまり YA&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;8,16&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../png-pixel-type6.png&#34; /&gt; R,G,B の後ろにアルファ値。つまり RGBA　(PNG32)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;type-0-グレースケール:418c06c92c8215b52bf45f50bda544bf&#34;&gt;Type:0 グレースケール&lt;/h2&gt;

&lt;p&gt;黒:0〜白:2^(bit数)の範囲の値を並べるだけの形式です。
bit数は 1,2,4,8,16 から選択できます。
&lt;center&gt; &lt;img src=&#34;../png-type0.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png -type Grayscale Opaopa-type0.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-type0.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;尚、tRNS チャンクをつける事で透明ピクセルも表現できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;type-2-rgb-png24:418c06c92c8215b52bf45f50bda544bf&#34;&gt;Type:2 RGB (PNG24)&lt;/h2&gt;

&lt;p&gt;ピクセルの R,G,B をそのまま展開します。
&lt;center&gt; &lt;img src=&#34;../png-type2.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png png24:Opaopa-png24.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-png24.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;PNG32 から PNG24 に変換しても透明度は消えますが、tRNS 付きの PNG8 からは tRNS を引き継げます。但し半透明は表現できず透明か不透明かのどちらかに割り当てられます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa-png8-trns.png png24:Opaopa-png24-trns.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-png24-trns.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tRNS チャンクをつける事で透明ピクセルも表現できます。但し、どの色を透明にするかを指定する方式なので、透明か不透明のどちらかで半透明は表現できません。大人しく Type 6 の RGBA 形式を使いましょう。&lt;/li&gt;
&lt;li&gt;PLTE チャンクをつける事で擬似カラー端末で表示する時のパレットを指定できます。今時レアですが。(sPLT とおなじ？)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;type-3-パレット-png8:418c06c92c8215b52bf45f50bda544bf&#34;&gt;Type:3 パレット (PNG8)&lt;/h2&gt;

&lt;p&gt;色のパレットを持ち、そこへのインデックス値を並べて画像を表現します。
&lt;center&gt; &lt;img src=&#34;../png-type3.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png  png8:Opaopa-png8.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-png8.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;tRNS チャンクをつける事で透明度も表現できます。
&lt;center&gt; &lt;img src=&#34;../png-type3-tRNS.png&#34; /&gt; &lt;/center&gt;
&lt;center&gt; &lt;img src=&#34;../Opaopa-png8-trns.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;type-4-透明度つきグレースケール:418c06c92c8215b52bf45f50bda544bf&#34;&gt;Type:4 透明度つきグレースケール&lt;/h2&gt;

&lt;p&gt;グレースケールの値と透明度のセットで表現します。
&lt;center&gt; &lt;img src=&#34;../png-type4.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png -type GrayscaleMatte  Opaopa-type4.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-type4.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;type-6-rgba-png32:418c06c92c8215b52bf45f50bda544bf&#34;&gt;Type:6 RGBA (PNG32)&lt;/h2&gt;

&lt;p&gt;ピクセルの R,G,B,A を展開します。
&lt;center&gt; &lt;img src=&#34;../png-type6.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png  png32:Opaopa-png32.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-png32.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;インターレース:418c06c92c8215b52bf45f50bda544bf&#34;&gt;インターレース&lt;/h1&gt;

&lt;p&gt;PNG のインターレースは独特で、Adam7 アルゴリズムを使います。&lt;/p&gt;

&lt;h2 id=&#34;インターレース方式-adam7:418c06c92c8215b52bf45f50bda544bf&#34;&gt;インターレース方式 Adam7&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png -interlace PNG Opaopa-adam7.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-adam7.png&#34; /&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;ピクセルの並ぶ順番:418c06c92c8215b52bf45f50bda544bf&#34;&gt;ピクセルの並ぶ順番&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ピクセル&lt;/th&gt;
&lt;th&gt;実際の表示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-1.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-1.png&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-1-cmpl.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-1-cmpl.png&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-2.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-2.png&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-2-cmpl.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-2-cmpl.png&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-3.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-3.png&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1-adam7-3-cmpl.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8-adam7-3-cmpl.png&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;../Opaopa-dot1.png&#34; /&gt; &lt;img src=&#34;../Opaopa-dot8.png&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ちなみに上記画像は ImageMagick で以下のように生成できます。(-fx オプション便利！)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;インターレースのフェーズ別画像&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa-dot1.png -filter Point -fx &amp;quot;!(i%8)*!(j%8)*u&amp;quot; Opaopa-dot1-adam7-1.png
$ convert Opaopa-dot1.png -filter Point -fx &amp;quot;!(i%4)*!(j%4)*u&amp;quot; Opaopa-dot1-adam7-2.png
$ convert Opaopa-dot1.png -filter Point -fx &amp;quot;!(i%2)*!(j%2)*u&amp;quot; Opaopa-dot1-adam7-3.png
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;フェーズ別画像ピクセル補完あり&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert  Opaopa-dot1.png -filter Point -fx &amp;quot;p{i-i%8,j-j%8}&amp;quot; Opaopa-dot1-adam7-1-cmpl.png
$ convert  Opaopa-dot1.png -filter Point -fx &amp;quot;p{i-i%4,j-j%4}&amp;quot; Opaopa-dot1-adam7-2-cmpl.png
$ convert  Opaopa-dot1.png -filter Point -fx &amp;quot;p{i-i%2,j-j%2}&amp;quot; Opaopa-dot1-adam7-3-cmpl.png
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ドット絵の拡大風画像&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa-dot1-adam7-1.png -filter Point -resize 800% -fx &amp;quot;(i%8!=0)*(j%8!=0)*u&amp;quot; Opaopa-dot8-adam7-1.png
＜略＞
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;メタデータ:418c06c92c8215b52bf45f50bda544bf&#34;&gt;メタデータ&lt;/h1&gt;

&lt;h2 id=&#34;gama-ガンマ補正:418c06c92c8215b52bf45f50bda544bf&#34;&gt;gAMA (ガンマ補正)&lt;/h2&gt;

&lt;p&gt;単純にガンマ値を指定します。BigEndian の4byteで表現していて、ガンマ値を100000倍した値を格納します。逆にいうと、バイナリを整数として読み出し、1/100000 した値がガンマ値です。&lt;/p&gt;

&lt;h2 id=&#34;chrm-基本色度:418c06c92c8215b52bf45f50bda544bf&#34;&gt;cHRM (基本色度)&lt;/h2&gt;

&lt;p&gt;基本色度やホワイトバランスを指定します。
尚、sRGB 又は iCPP チャンクがある場合、cHRM チャンクは無効です。&lt;/p&gt;

&lt;h2 id=&#34;icpp-icc-プロファイル:418c06c92c8215b52bf45f50bda544bf&#34;&gt;iCPP (ICC プロファイル)&lt;/h2&gt;

&lt;p&gt;ICC プロファイルを埋め込めます。 (JPEG と同じ要領です)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png -profile sRGB.icc Opaopa-sRGB.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-sRGB.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa.png -profile GBR.icc Opaopa-GBR.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-GBR.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa-sRGB.png -profile GBR.icc Opaopa-sRGB-GBR.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-sRGB-GBR.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert Opaopa-sRGB-GBR.png -strip Opaopa-sRGB-GBR-strip.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa-sRGB-GBR-strip.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;JPEG の時と同じのようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;元画像ファイルに ICC プロファイルがない場合

&lt;ul&gt;
&lt;li&gt;=&amp;gt; 単に ICC プロファイルを付けるだけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ICC プロファイルがあった場合 =&amp;gt; 見た目の色が変わらないよう画像データのRGBを書き換えつつ ICCプロファイルを上書きする&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bkgd-背景色:418c06c92c8215b52bf45f50bda544bf&#34;&gt;bKGD (背景色)&lt;/h2&gt;

&lt;p&gt;背景色を指定します。画像が貼られた時に埋まらなかったピクセルを埋める色です。&lt;/p&gt;

&lt;h1 id=&#34;メタデータ-おまけ:418c06c92c8215b52bf45f50bda544bf&#34;&gt;メタデータ (おまけ)&lt;/h1&gt;

&lt;h2 id=&#34;phys:418c06c92c8215b52bf45f50bda544bf&#34;&gt;pHYs&lt;/h2&gt;

&lt;p&gt;DPI ならぬ DPM (インチでなくメートル単位) で物理的な解像度を指定します。印刷に影響するかもしれません。単位がインチでなくメートルなので少し計算が面倒です。&lt;/p&gt;

&lt;h2 id=&#34;sbit:418c06c92c8215b52bf45f50bda544bf&#34;&gt;sBIT&lt;/h2&gt;

&lt;p&gt;元画像データの Bit深度を記録します。
恐らく、任意のビット深度を表現できる画像データ(例えば BMP とか)から PNG に変換した後で、また元のビット深度に戻したいといった場合に使えそうです。ビット深度を下げるような変換をした場合はつけないよう勧めています。意味がないので。&lt;/p&gt;

&lt;h1 id=&#34;参考-url:418c06c92c8215b52bf45f50bda544bf&#34;&gt;参考 URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;PNG (Portable Network Graphics) Specification, Version 1.2

&lt;ul&gt;
&lt;li&gt;(PDF版) &lt;a href=&#34;http://www.libpng.org/pub/png/spec/1.2/png-1.2.pdf&#34;&gt;http://www.libpng.org/pub/png/spec/1.2/png-1.2.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(HTML版) &lt;a href=&#34;http://www.libpng.org/pub/png/spec/1.2/PNG-Contents.html&#34;&gt;http://www.libpng.org/pub/png/spec/1.2/PNG-Contents.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PNGについて

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://homepage2.nifty.com/sophia0/png.html&#34;&gt;http://homepage2.nifty.com/sophia0/png.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JPG ファイルフォーマット

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.setsuki.com/hsp/ext/jpg.htm&#34;&gt;http://www.setsuki.com/hsp/ext/jpg.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ImageMagick で JPEG の形式を変換</title>
      <link>https://blog.awm.jp/2016/01/26/jpeg/</link>
      <pubDate>Tue, 26 Jan 2016 14:55:39 +0900</pubDate>
      
      <guid>https://blog.awm.jp/2016/01/26/jpeg/</guid>
      <description>

&lt;h1 id=&#34;imagemagick-で-jpeg-の形式を変換:51b8d3349056accb3067af132947c35a&#34;&gt;ImageMagick で JPEG の形式を変換&lt;/h1&gt;

&lt;p&gt;JPEG は同じように見える画像でも、バイナリ的に色んな形式やメタデータで表現できます。ImageMagick でそれらの形式に変換する方法を並べてみます。&lt;/p&gt;

&lt;h1 id=&#34;プログレッシブjpeg:51b8d3349056accb3067af132947c35a&#34;&gt;プログレッシブJPEG&lt;/h1&gt;

&lt;p&gt;読みはじめに粗い画像を表示して、読み進めるにつれて画質に更新する表示が出来ます。ネットワーク回線が細い環境に嬉しい形式です。
周波数成分が粗い方から段階的に分けて JPEG チャンクに配置する事で実現します。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../progressive.png&#34;&gt; &lt;/center&gt;
画像元) &lt;a href=&#34;http://dic.nicovideo.jp/a/%E3%83%95%E3%82%A1%E3%83%B3%E3%82%BF%E3%82%B8%E3%83%BC%E3%82%BE%E3%83%BC%E3%83%B3&#34;&gt;ニコニコ大百科(仮) ファンタジーゾーン&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プログレッシブJPEGの作り方&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ convert orig.jpg -interlace JPEG progressive.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;クロマサブサンプリング:51b8d3349056accb3067af132947c35a&#34;&gt;クロマサブサンプリング&lt;/h1&gt;

&lt;p&gt;基本的に &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:51b8d3349056accb3067af132947c35a:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:51b8d3349056accb3067af132947c35a:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; JPEG は色を YCbCr の３つの値で保持していて、色味を表す Cb と Cr だけ間引く事で見た目をあまり変えずにデータ量を削減する事ができます。人の目が色味の変化に鈍感な性質を利用する方式です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JPEG の YCbCr について

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.awm.jp/2016/02/06/ycbcr/&#34;&gt;https://blog.awm.jp/2016/02/06/ycbcr/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JPEG のクロマサブサンプリングと YUVabc

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.awm.jp/2016/02/10/yuv/&#34;&gt;http://blog.awm.jp/2016/02/10/yuv/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../yuvabc.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;クロマサブサンプリングの作り方&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ convert orig.jpg -sampling-factor &amp;quot;1x1,1x1,1x1&amp;quot; yuv444.jpg
$ convert orig.jpg -sampling-factor &amp;quot;2x1,1x1,1x1&amp;quot; yuv422.jpg
$ convert orig.jpg -sampling-factor &amp;quot;4x1,1x1,1x1&amp;quot; yuv411.jpg
$ convert orig.jpg -sampling-factor &amp;quot;1x2,1x1,1x1&amp;quot; yuv440.jpg
$ convert orig.jpg -sampling-factor &amp;quot;2x2,1x1,1x1&amp;quot; yuv420.jpg
$ convert orig.jpg -sampling-factor &amp;quot;4x2,1x1,1x1&amp;quot; yuv410.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;exif-exittool-で変換:51b8d3349056accb3067af132947c35a&#34;&gt;Exif (Exittool で変換)&lt;/h1&gt;

&lt;h2 id=&#34;orientation:51b8d3349056accb3067af132947c35a&#34;&gt;Orientation&lt;/h2&gt;

&lt;p&gt;Exif の Orientation タグを指定する事で表示の時の画像の向きを制御できます。(たまに無視するビューアもあります)&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../exif_orientation.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Exif Orientation の向きについては以下の記事をどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.awm.jp/2016/01/07/orient/&#34;&gt;https://blog.awm.jp/2016/01/07/orient/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../orient-38per.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;既に Exif Orientation が含まれる画像ファイルであれば ImageMagick で更新出来ますが、入っていない場合に新規に追加する事は無理そうです。このケースでは Exiftool を使います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ exiftool orig.jpg -Orientation=0 -n -o orient0.jpg
$ exiftool orig.jpg -Orientation=1 -n -o orient1.jpg
$ exiftool orig.jpg -Orientation=2 -n -o orient2.jpg
$ exiftool orig.jpg -Orientation=3 -n -o orient3.jpg
$ exiftool orig.jpg -Orientation=4 -n -o orient4.jpg
$ exiftool orig.jpg -Orientation=5 -n -o orient5.jpg
$ exiftool orig.jpg -Orientation=6 -n -o orient6.jpg
$ exiftool orig.jpg -Orientation=7 -n -o orient7.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※ -o をつけ忘れると orig.jpg を上書きしてしまうので注意&lt;/p&gt;

&lt;h1 id=&#34;profile:51b8d3349056accb3067af132947c35a&#34;&gt;Profile&lt;/h1&gt;

&lt;h2 id=&#34;icc-profile:51b8d3349056accb3067af132947c35a&#34;&gt;ICC Profile&lt;/h2&gt;

&lt;p&gt;ICC プロファイルの詳細は以下のスライドが分かり易いので、参照下さい。(英語)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ICC color management for print production

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.color.org/craigrevie.pdf&#34;&gt;http://www.color.org/craigrevie.pdf&lt;/a&gt; &amp;copy; FujiFilm 2002&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ポイントとしては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;撮影や表示のデバイスによって R,G,B の値と実際の色との対応が微妙に違うのを補正する

&lt;ul&gt;
&lt;li&gt;特に新し目のデバイスでは性能があがって表現できる色域が広がっているので、それと既存のデバイスとの辻褄合わせが要る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;全デバイス同士で直接変換すると組み合わせ爆発して辛いので、共通の色空間経由で変換する

&lt;ul&gt;
&lt;li&gt;その中心の空間を PCS (Profile Connection Space) と呼ぶ。CIE の Lab 又は XYZ を使う。
&lt;center&gt; &lt;img src=&#34;../craigrevie_13_25per.png&#34;&gt;  &lt;img src=&#34;../craigrevie_14_25per.png&#34;&gt; &lt;br /&gt; (上記スライドからの引用)&lt;/center&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ImageMagick では -profile オプションで ICC プロファイルを適用できます。変換元の JPEG に ICC プロファイルが入っているか否かによって動作が異なります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;変換元 JPEG に ICC プロファイルが無い場合

&lt;ul&gt;
&lt;li&gt;ICC プロファイルのメタデータを追加するだけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;変換元 JPEG に ICC プロファイルが入っている場合&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ICC プロファイルのメタデータを書き換えると同時に、ICCプロファイル対応ビューアでの表示の色が変わらないよう実データのピクセルの色を補正する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;変換元 JPEG に ICC プロファイルが無い場合&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ convert noicc.jpg -profile sRGB.icc srgb.icc # 見た目変わらない
$ convert noicc.jpg -profile  GBR.icc  gbr.icc # 見た目変わる
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../icc-profile1.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;変換元 JPEG に ICC プロファイルが入っている場合&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ convert srgb.jpg -profile sRGB.icc srgb.icc # 見た目変わらない
$ convert srgb.jpg -profile  GBR.icc  gbr.icc # 見た目変わらない
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../icc-profile2.png&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;グレイjpeg:51b8d3349056accb3067af132947c35a&#34;&gt;グレイJPEG&lt;/h1&gt;

&lt;p&gt;JPEG 形式のタイプとして Grayscale が存在しますので、一応作り方を紹介。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;../Opaopa.jpg&#34; align=&#34;middle&#34;&gt; =&amp;gt; &lt;img src=&#34;../Opaopa-gray.jpg&#34; align=&#34;middle&#34;&gt; &lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert orig.jpg -type grayscale gray.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;最後に:51b8d3349056accb3067af132947c35a&#34;&gt;最後に&lt;/h1&gt;

&lt;p&gt;他にもこんな形式を知っているという方がいましたら、ご指摘頂けると幸いです。&lt;/p&gt;

&lt;h1 id=&#34;参考-url:51b8d3349056accb3067af132947c35a&#34;&gt;参考 URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Exiftool

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sno.phy.queensu.ca/~phil/exiftool/&#34;&gt;http://www.sno.phy.queensu.ca/~phil/exiftool/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:51b8d3349056accb3067af132947c35a:1&#34;&gt;Grayscale や CMYK の値で持つ事もできます。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:51b8d3349056accb3067af132947c35a:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>