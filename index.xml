<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>awm-Tech</title>
    <link>http://blog.awm.jp/</link>
    <description>Recent content on awm-Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; awm.jp</copyright>
    <lastBuildDate>Mon, 04 Jan 2016 19:38:39 +0900</lastBuildDate>
    <atom:link href="http://blog.awm.jp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PNM と ImageMagick で画像ファイルを手作り生成</title>
      <link>http://blog.awm.jp/2016/01/04/pnm/</link>
      <pubDate>Mon, 04 Jan 2016 19:38:39 +0900</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/04/pnm/</guid>
      <description>

&lt;h1 id=&#34;pnm-と-imagemagick-で画像ファイルを手作り生成:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;PNM と ImageMagick で画像ファイルを手作り生成&lt;/h1&gt;

&lt;p&gt;何らかの画像実験で都合の良い画像ファイルが欲しい時にテキストエディタで作れると便利で、PNM (Portable aNyMap) フォーマットを利用するとそんな事が簡単に出来ます。&lt;/p&gt;

&lt;h1 id=&#34;pnm-とは:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;PNM とは&lt;/h1&gt;

&lt;p&gt;古くからある画像フォーマット群で ASCII テキストでもバイナリでも表現出来る事が大きな特徴です、尚、圧縮はいたしません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wikiedia: &lt;a href=&#34;https://ja.wikipedia.org/wiki/PNM_(%E7%94%BB%E5%83%8F%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88)&#34;&gt;PNM (画像フォーマット)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PNM は 以下の３つのフォーマットをまとめた呼び方です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PBM (portable bitmap)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://netpbm.sourceforge.net/doc/pbm.html&#34;&gt;http://netpbm.sourceforge.net/doc/pbm.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PGM (portable graymap)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://netpbm.sourceforge.net/doc/pgm.html&#34;&gt;http://netpbm.sourceforge.net/doc/pgm.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PPM (portable pixmap)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://netpbm.sourceforge.net/doc/ppm.html&#34;&gt;http://netpbm.sourceforge.net/doc/ppm.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;拡張フォーマット:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;拡張フォーマット&lt;/h2&gt;

&lt;p&gt;PNM ファミリーではない為に今回は解説しませんが、以下の拡張フォーマットがあります。PAM は透明度が表現できます。PFM は float 表現です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PAM (portable arbitrary map)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://netpbm.sourceforge.net/doc/pam.html&#34;&gt;http://netpbm.sourceforge.net/doc/pam.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;PFM (portable float map)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://netpbm.sourceforge.net/doc/pfm.html&#34;&gt;http://netpbm.sourceforge.net/doc/pfm.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;フォーマット概要:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;フォーマット概要&lt;/h1&gt;

&lt;p&gt;ファイル先頭の文字列に応じて、以下のフォーマットに分かれます。(尚、PAM形式は P7 で、PFM形式は PF, Pf です)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ファイル先頭&lt;/th&gt;
&lt;th&gt;フォーマット&lt;/th&gt;
&lt;th&gt;データ表現&lt;/th&gt;
&lt;th&gt;画像表現&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;P1&lt;/td&gt;
&lt;td&gt;PBM&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;白黒画像&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;P2&lt;/td&gt;
&lt;td&gt;PGM&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;グレー画像&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;P3&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;カラー画像(RGB)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;P4&lt;/td&gt;
&lt;td&gt;PGM&lt;/td&gt;
&lt;td&gt;Binary&lt;/td&gt;
&lt;td&gt;白黒画像&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;P5&lt;/td&gt;
&lt;td&gt;PGM&lt;/td&gt;
&lt;td&gt;Binary&lt;/td&gt;
&lt;td&gt;グレー画像&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;P6&lt;/td&gt;
&lt;td&gt;PPM&lt;/td&gt;
&lt;td&gt;Binary&lt;/td&gt;
&lt;td&gt;カラー画像(RGB)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;データ表現が ASCII の場合は以下のフォーマットをとります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;フォーマット種別 # P1〜P6のいずれか。
横サイズ 縦サイズ
最大値             # P1 の時は実質1固定なので省略
画像データの並び
.....
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;pbm-portable-bitmap-format:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;PBM (portable bitmap format)&lt;/h1&gt;

&lt;p&gt;画像の白黒を 0,1 で表現します。(0:白、1:黒である事に注意)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batsu.pbm&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;P1
7 7
P1
7 7
1 0 0 0 0 0 1
0 1 0 0 0 1 0
0 0 1 0 1 0 0
0 0 0 1 0 0 0
0 0 1 0 1 0 0
0 1 0 0 0 1 0
1 0 0 0 0 0 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ImageMagick の convert で変換します。ついでに8倍に拡大したものも。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert batsu.pbm batsu.png
$ convert -resize 800% -filter point batsu.png batsu_8.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu.png&#34; title=&#34;batsu&#34; &gt; &lt;/center&gt;
&lt;center&gt; 8倍に ↓ 拡大 &lt;/center&gt;
&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu_8.png&#34; title=&#34;batsu_8&#34; &gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;pgm-portable-graymap-format:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;PGM (portable graymap format)&lt;/h1&gt;

&lt;p&gt;白と黒の間で濃淡をつけられます。いわゆるグレー画像です。4段階で作ってみます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batsu_gray.pgm&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;P2
7 7
4
4 0 0 0 0 0 4
0 3 0 0 0 3 0
0 0 2 0 2 0 0
0 0 0 1 0 0 0
0 0 2 0 2 0 0
0 3 0 0 0 3 0
4 0 0 0 0 0 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;convert で変換 &amp;amp; 8倍画像&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert batsu_gray.pgm batsu_gray.png
$ convert -resize 800% -filter point batsu_gray.png batsu_gray_8.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu_gray.png&#34; title=&#34;batsu_gray&#34; &gt; &lt;/center&gt;
&lt;center&gt; 8倍に ↓ 拡大 &lt;/center&gt;
&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu_gray_8.png&#34; title=&#34;batsu_gray_8&#34; &gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;ppm-portable-pixmap-format:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;PPM (portable pixmap format)&lt;/h1&gt;

&lt;p&gt;RGB でカラーを表現できます。以下のも4段階です。ちなみに、256 段階を指定すると皆さんお馴染みの RGB 表現になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batsu_rgb.ppm&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;P3
7 7
4
4 0 0  0 0 0  0 0 0  0 0 0  0 0 0  0 0 0  0 0 4
0 0 0  3 0 0  0 0 0  0 0 0  0 0 0  0 0 3  0 0 0
0 0 0  0 0 0  2 0 0  0 0 0  0 0 3  0 0 0  0 0 0
0 0 0  0 0 0  0 0 0  1 1 1  0 0 0  0 0 0  0 0 0
0 0 0  0 0 0  0 2 0  0 0 0  2 2 0  0 0 0  0 0 0
0 0 0  0 3 0  0 0 0  0 0 0  0 0 0  3 3 0  0 0 0
0 4 0  0 0 0  0 0 0  0 0 0  0 0 0  0 0 0  4 4 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;convert で変換&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert batsu_rgb.ppm batsu_rgb.png
$ convert -resize 800% -filter point batsu_rgb.png batsu_rgb_8.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu_rgb.png&#34; title=&#34;batsu_rgb&#34; &gt; &lt;/center&gt;
&lt;center&gt; 8倍に ↓ 拡大 &lt;/center&gt;
&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/04/batsu_rgb_8.png&#34; title=&#34;batsu_rgb_8&#34; &gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;参考-url:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;参考 URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Wikipedia: &lt;a href=&#34;https://ja.wikipedia.org/wiki/PNM_(%E7%94%BB%E5%83%8F%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88)&#34;&gt;PNM (画像フォーマット)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;碧色工房 〜 PNM ( PPM / PGM / PBM ) ファイルフォーマット

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mm2d.net/main/prog/c/image_io-01.html&#34;&gt;http://www.mm2d.net/main/prog/c/image_io-01.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ImageMagick/ImageMagick/blob/master/coders/pnm.c&#34;&gt;https://github.com/ImageMagick/ImageMagick/blob/master/coders/pnm.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;さいごに:c3c49ecad8577b50a243cb7525433ac2&#34;&gt;さいごに&lt;/h1&gt;

&lt;p&gt;エディタで任意のビットマップ画像を作りたい時にご活用下さい。たまに便利です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo の post テンプレートのカスタマイズ</title>
      <link>http://blog.awm.jp/2016/01/03/hugo/</link>
      <pubDate>Sun, 03 Jan 2016 22:03:24 +0900</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/03/hugo/</guid>
      <description>

&lt;h1 id=&#34;hugo-の記事テンプレート:32ab7241d48fcc174c877413a917f8cf&#34;&gt;Hugo の記事テンプレート&lt;/h1&gt;

&lt;p&gt;hugo new &lt;path&gt; を実行すると Markdown ファイルが作られます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new 2016/01/03/hugo.md
/yoya/yoya/git/blog.awm.jp/content/2016/01/03/hugo.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかしデフォルトの記事テンプレートが&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;date = &amp;quot;2016-01-03T22:12:24+09:00&amp;quot;
title = &amp;quot;test&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のように date と title だけで、出来ればもう少し欲しい所です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content/types/&#34;&gt;https://gohugo.io/content/types/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;何となく、この ContentTypes の archetype が使えそうです。&lt;/p&gt;

&lt;h1 id=&#34;archetypes:32ab7241d48fcc174c877413a917f8cf&#34;&gt;archetypes&lt;/h1&gt;

&lt;p&gt;&lt;del&gt; archetypes/post.md に追加したいテンプレートを書いて、hugo new -k post &lt;path&gt; を実行します。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;archetypes/default.md に追加したいテンプレートを入れます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat archetypes/default.md
+++
categories = []
tags = []
draft = false
+++

#
$ hugo new test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;結果:32ab7241d48fcc174c877413a917f8cf&#34;&gt;結果&lt;/h1&gt;

&lt;p&gt;元々の date, title に加えて post.md の中身が追加されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat content/test.md
+++
categories = []
date = &amp;quot;2016-01-03T22:14:22+09:00&amp;quot;
draft = false
tags = []
title = &amp;quot;test3&amp;quot;

+++

#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで少し書き始める手間が減りますね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考1 &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp/commit/d9ac4c2eee770077fb39efc5aa5b0d436839407f&#34;&gt;https://github.com/awmlabs/blog.awm.jp/commit/d9ac4c2eee770077fb39efc5aa5b0d436839407f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考2 &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp/commit/7ad97d0766219602cf72434cd2b0daad3d72c2ac&#34;&gt;https://github.com/awmlabs/blog.awm.jp/commit/7ad97d0766219602cf72434cd2b0daad3d72c2ac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;思う所:32ab7241d48fcc174c877413a917f8cf&#34;&gt;思う所&lt;/h1&gt;

&lt;p&gt;メタデータの並びは、出来れば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title = &amp;quot;Hugo の post テンプレートのカスタマイズ&amp;quot;
date = &amp;quot;2016-01-03T22:03:24+09:00&amp;quot;
categories = [&amp;quot;Hugo&amp;quot;]
tags = [&amp;quot;Hugo&amp;quot;]
draft = false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のようにしたいのですが、abc 順で並び直されてしまうようです。ここは出来れば改造したいです。&lt;/p&gt;

&lt;h1 id=&#34;ソース巡り:32ab7241d48fcc174c877413a917f8cf&#34;&gt;ソース巡り&lt;/h1&gt;

&lt;p&gt;英語のドキュメントが苦手なので、ソースコードを追って見つけました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;github.com/spf13/hugo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ cd github.com/spf13/hugo
$ grep -r &amp;quot;title =&amp;quot; . | head -3
./commands/import_jekyll.go:	       	 title = str
./create/content.go:			       by = []byte(&amp;quot;+++\n title = \&amp;quot;title\&amp;quot;\n draft = true \n+++\n&amp;quot;)
./docs/config.toml:title = &amp;quot;Hugo: A Fast and Flexible Website Generator&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;create/content.go&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;NewContent&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;FindArchetype&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #a6e22e&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;[]byte(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;+++\n title = \&amp;quot;title\&amp;quot;\n draft = true \n+++\n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;psr&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;parser&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;ReadFrom&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;NewReader&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;))&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;psr&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;Metadata&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;archetype にファイルを置いてカスタムするのが分かります。kind で指定しているようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;command/new.go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;newCmd&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;Flags&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;StringVarP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;contentType&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Content type to create&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;＜&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;略&lt;/span&gt;&lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;＞&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;contentType&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;kind&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;contentType&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;NewContent&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;createpath&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;これで、-k オプションで指定する事が分かります。&lt;/p&gt;

&lt;p&gt;あとはドキュメントを検索すると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content/types/&#34;&gt;https://gohugo.io/content/types/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が出てきて、hugo new &lt;path&gt; は post と呼ばれるので、-k post だなと推測できる訳です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog の Deploy で Circle CI</title>
      <link>http://blog.awm.jp/2016/01/02/circleci/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/02/circleci/</guid>
      <description>

&lt;h1 id=&#34;blog-の-deploy-で-circle-ci:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Blog の Deploy で Circle CI&lt;/h1&gt;

&lt;p&gt;昨日の時点では Markdown ファイルの編集後に make install する事でブログサイトに HTML をデプロイしますが、今回は Markdown を git commit したら自動でデプロイされるべく、Circle CI で連携する仕組みを導入しました。&lt;/p&gt;

&lt;h1 id=&#34;はじめに:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;前回は awmcorp に markdown 等の blog のソースを置いてましたが、権限設定が面倒なので、awmlabs アカウントにレポジトリをまとめました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;× &lt;a href=&#34;https://github.com/awmcorp/blog.awm.jp&#34;&gt;https://github.com/awmcorp/blog.awm.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;○ &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp&#34;&gt;https://github.com/awmlabs/blog.awm.jp&lt;/a&gt; blog のソース&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/awmlabs.github.io&#34;&gt;https://github.com/awmlabs/awmlabs.github.io&lt;/a&gt; blog の公開ファイル&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;circle-yaml:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;circle.yaml&lt;/h1&gt;

&lt;p&gt;連携時にどういったコマンドを実行するかの指定ですが、nobu666 神のファイルをコピペして、自分のとこに合うよう書き換えました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nobu666/nobu666.com/blob/master/circle.yml&#34;&gt;https://github.com/nobu666/nobu666.com/blob/master/circle.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp/blob/master/circle.yml&#34;&gt;https://github.com/awmlabs/blog.awm.jp/blob/master/circle.yml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;machine&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;timezone&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;Asia/Tokyo&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;checkout&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;git submodule update --init --recursive&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;go get -v github.com/spf13/hugo&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;git config --global user.name &amp;quot;awm labs&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;git config --global user.email &amp;quot;labs@awm.jp&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;override&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
   &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;echo&lt;/span&gt;

&lt;span style=&#34;color: #ae81ff&#34;&gt;deployment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;branch&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;master&lt;/span&gt;
    &lt;span style=&#34;color: #ae81ff&#34;&gt;commands&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;git clone git@github.com:awmlabs/awmlabs.github.io.git public&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;pip install Pygments --user&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;hugo&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;cd public &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;[ci skip] publish&amp;quot;; if [ $? -eq 0 ]; then git push origin master; else :; fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;神よ、ありがとう、ありがとう。(666なので邪神かもしれないが。)&lt;/p&gt;

&lt;h2 id=&#34;pygments:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Pygments&lt;/h2&gt;

&lt;p&gt;Syntax Highlight を使いたいので、Pygments を入れたいけど、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install Pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行すると、/usr/ 以下に入れようとして権限的にエラーになるので &amp;ndash;user を後ろにつけてます。&lt;/p&gt;

&lt;h1 id=&#34;circle-ci-アカウント作成:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Circle CI アカウント作成&lt;/h1&gt;

&lt;p&gt;連携したい Github アカウントで Github にログインしておいて、Circle CI のページにアクセスして Circle CI のページで SignUp すると連携用アカウントが作れます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;https://circleci.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github で所属する組織(Organizatins)全てのアクセス権を要求するので、色んな組織に所属するアカウントでの連携は避けたい。という人は新しい Github アカウントを作って設定すると良さそうです。&lt;/p&gt;

&lt;p&gt;Github API 的に組織ごとのオンオフ出来ません。(アカウント単位での認証なので仕方ないのかも) あと組織(Organization) 側で Circle CI との連携は切る事も出来るので、融通が効く場合はそういった手もあります。&lt;/p&gt;

&lt;h1 id=&#34;circle-ci-での連携設定:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;Circle CI での連携設定&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Add Project で監視するレポジトリを選択します。&lt;/li&gt;
&lt;li&gt;Project Settings の Permissions (SSH, API, AWS のでなく、唯の Permissions) から Authorize ＞ Create and add とボタンを押してく。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/settings/applications&#34;&gt;https://github.com/settings/applications&lt;/a&gt; で連携を確認 (revoke 押すと戻すのが少し面倒なので気をつけて)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(あと一手間あった気がするので、思い出したら後で追記します)&lt;/p&gt;

&lt;h1 id=&#34;異なる-github-アカウントでの連携-推測:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;異なる Github アカウントでの連携 (推測)&lt;/h1&gt;

&lt;p&gt;同じアカウントであれば Permission 設定でボタン一発ですが、アカウントが違うレポジトリの場合は ssh-keygen -f id&lt;em&gt;rsa&lt;/em&gt;(アカウント名) で passphrase 空で作成して、秘密鍵と公開鍵を以下の URL に登録すれば出来そうな気がして試して駄目でした。気のせいでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://circleci.com/gh/&#34;&gt;https://circleci.com/gh/&lt;/a&gt;&amp;lt;ユーザor組織名&amp;gt;/&amp;lt;リポジトリ名&amp;gt;/edit#ssh&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt;&amp;lt;ユーザor組織名&amp;gt;/&amp;lt;リポジトリ名/settings/keys&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;必要に迫られた時にでも、もう少し試行錯誤してみます。&lt;/p&gt;

&lt;h1 id=&#34;備考:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;備考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;当初、作りたてのレポジトリが見えなくていつの間にか見えたので反映に時間がかかるのかと思いましたが、普通はすぐ反映されるそうです。謎です。&lt;/li&gt;
&lt;li&gt;別アカウントでの連携をしたかったけど、push で marked as read only のエラーの壁を越えられなかったので、そのうち挑戦したい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考url:74a620a9653e59d29d4e0cbb59ac7a79&#34;&gt;参考URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/xlune/items/f5248a6cdddfb011c2ac&#34;&gt;http://qiita.com/xlune/items/f5248a6cdddfb011c2ac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tdoc.info/blog/2014/01/15/pip.html&#34;&gt;http://tdoc.info/blog/2014/01/15/pip.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo のサマリーが大きすぎる件</title>
      <link>http://blog.awm.jp/2016/01/02/hugo/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/02/hugo/</guid>
      <description>

&lt;h1 id=&#34;はじめに:32ab7241d48fcc174c877413a917f8cf&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;Hugo でブログサイトを作ってみたけれど、サマリーが大きすぎるので行数を減らしたかった。結論は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;config.toml の頭に hasCJKLanguage = true を入れる&lt;/li&gt;
&lt;li&gt;もしくは、 各々の markdown ファイルの先頭で isCJKLanguage = true を入れる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そこまで辿り着くまでの話です。
尚、ドキュメントに明記されてました。恥ずかしいっ (*ノノ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/configuration&#34;&gt;https://gohugo.io/overview/configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# if true, auto-detect Chinese/Janapese/Korean Languages in the content.
 (.Summary and .WordCount can work properly in CJKLanguage)
hasCJKLanguage              false
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content/front-matter&#34;&gt;https://gohugo.io/content/front-matter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;**isCJKLanguage** If true, explicitly treat the content as CJKLanguage
 (.Summary and .WordCount can work properly in CJKLanguage)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;hugo-のサマリーの実例:32ab7241d48fcc174c877413a917f8cf&#34;&gt;Hugo のサマリーの実例&lt;/h1&gt;

&lt;p&gt;デフォルトだと以下のようにサマリーが巨大になります。
&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/02/ss1_h.png&#34; title=&#34;figure-1&#34; &gt; &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;hasCJK 又は isCJK の設定を入れると以下のように自然なサイズになります。&lt;/p&gt;

&lt;p&gt;&lt;center&gt; &lt;img src=&#34;http://blog.awm.jp/2016/01/02/ss2_h.png&#34; title=&#34;figure-2&#34;/&gt; &lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;サマリーの仕様:32ab7241d48fcc174c877413a917f8cf&#34;&gt;サマリーの仕様&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content/summaries/&#34;&gt;https://gohugo.io/content/summaries/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;By default, Hugo automatically takes the first 70 words of your content as its
summary and stores it into the .Summary variable, which you may use in your
templates.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;単語を70個だけ表示するそうです。
By default なので値を 70 以外に変える方法があると推測し、ドキュメントを漁りましたが見つかりません。&lt;/p&gt;

&lt;p&gt;仕方ないので、実装を見る事にします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;https://github.com/spf13/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;実装:32ab7241d48fcc174c877413a917f8cf&#34;&gt;実装&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;github.com/spf13/hugo/hugolib/page.go&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;summary&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;truncated&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;helpers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;TruncateWordsByRune&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;PlainWords&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;helpers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;SummaryLength&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;summary&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;truncated&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;helpers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;TruncateWordsToWholeSentence&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;PlainWords&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;helpers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;SummaryLength&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;削る処理では helper で定義している SummaryLength を参照しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;github.com/spf13/hugo/helpers/content.go&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #75715e&#34;&gt;// Length of the summary that Hugo extracts from a content.&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;SummaryLength&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この SummaryLength を上書きする処理が何処にも無いので、設定で単語数を減らす事は出来なさそうです。(結論からいうと、そもそも数を減らす対策は間違えてる)&lt;/p&gt;

&lt;p&gt;よくよく見返すと、&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;summary&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;truncated&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;helpers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;TruncateWordsByRune&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;CJK (中国語、日本語、韓国語をひっくるめた総称) と判定した場合に、マルチバイト文字を意識して単語毎に分割してます。それ以外だとアルファベット等として空白で分割でしょう。&lt;/p&gt;

&lt;p&gt;日本語は単語の間に空白を挟みません。単語が連結して見えて少なく数えてしまっているようです。
さて、この isCJKLanguage は何処で設定されるのでしょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;github.com/spf13/hugo/hugolib/page.go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;iscjklanguage&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;new(&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;cast&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;ToBool&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;viper&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;GetBool&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;HasCJKLanguage&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;cjk&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;Match&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;rawContent&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;true&lt;/span&gt;
	&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;isCJKLanguage&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;false&lt;/span&gt;
	&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;設定キーワードらしい文字列が見つかりましたし、これ以上ソースを見るのは面倒なので、後はドキュメントを検索しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd github.com/spf13/hugo
$ grep -ri iscjklanguage docs
docs/content/content/front-matter.md:* **isCJKLanguage** If true, explicitly treat the content as CJKLanguage (.Summary and .WordCount can work properly in CJKLanguage)
$ grep -ri hascjklanguage  docs
docs/content/overview/configuration.md:    hasCJKLanguage              false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;後は対応する URL を開いて確認するだけです。(冒頭で紹介した URL)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/configuration&#34;&gt;https://gohugo.io/overview/configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content/front-matter&#34;&gt;https://gohugo.io/content/front-matter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上、 同じ罠にハマった方のお役に立てれば幸いです！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog はじめました</title>
      <link>http://blog.awm.jp/2016/01/01/blog/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.awm.jp/2016/01/01/blog/</guid>
      <description>

&lt;h1 id=&#34;blog-はじめました:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Blog はじめました&lt;/h1&gt;

&lt;p&gt;WordPressを試したり色々と迷いましたが、神の啓示に従い Github.io + Hugo + CircleCI の構成にしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/nobu666/status/680683739534393344&#34;&gt;https://twitter.com/nobu666/status/680683739534393344&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CircleCI 対応は時間かかりそうなので、デプロイはとりあえず手動対処にして試行錯誤した結果が以下のレポジトリです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt; &lt;a href=&#34;https://github.com/awmcorp/blog.awm.jp&#34;&gt;https://github.com/awmcorp/blog.awm.jp&lt;/a&gt; &lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;ins&gt; &lt;a href=&#34;https://github.com/awmlabs/blog.awm.jp&#34;&gt;https://github.com/awmlabs/blog.awm.jp&lt;/a&gt; (CircleCI連携の都合で、レポジトリを移動しました)&lt;/ins&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;github-io:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Github.io&lt;/h1&gt;

&lt;p&gt;github.com で &amp;lt;ユーザ名&amp;gt;.github.io というレポジトリを作れば、その URL でアクセス出来ます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/awmlabs/awmlabs.github.io&#34;&gt;https://github.com/awmlabs/awmlabs.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;=&amp;gt; &lt;a href=&#34;https://awmlabs.github.io/&#34;&gt;https://awmlabs.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここにブログを表示する静的なHTMLを入れていけば良い訳です。
Markdown ファイルからBlogサイトのHTMLを生成するツールは Hugo を使ってみました。&lt;/p&gt;

&lt;h2 id=&#34;blog-awm-jp-を公開urlにしたい:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;blog.awm.jp を公開URLにしたい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;=&amp;gt; &lt;a href=&#34;https://blog.awm.jp/&#34;&gt;https://blog.awm.jp/&lt;/a&gt; (awmlabs.github.io を指します)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DNS の CNAME で blog.awm.jp =&amp;gt; awmlabs.github.io を向けた上で、static/CNAME に blog.awm.jp の文字を入れておくと awmlabs.github.io でアクセスしても blog.awm.jp にリダイレクトするようです。&lt;/p&gt;

&lt;h1 id=&#34;hugo:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Hugo&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site blog.awm.jp
$ cd blog.awm.jp
$ hugo new 2016/01/01/blog.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のようにすると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog.awm.jp/content/2016/01/01/blog.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;にテンプレートの md ファイルが出来るので、そこに文章を記述して、blog.awm.jp フォルダのトップで、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行します。すると public 以下に表示用の HTMLファイルが生成されます。 実際に表示する為には、テーマが必要です。&lt;/p&gt;

&lt;h2 id=&#34;hugo-themes:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Hugo themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;
ここで色々なテーマが確認できます。一目惚れした base16 を適用しました。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/base16/&#34;&gt;http://themes.gohugo.io/base16/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;git submodule add git@github.com:htdvisser/hugo-base16-theme.git themes/base16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として持ってきます。尚、大抵のカスタマイズはトップのlayouts や static/css 以下で弄れるので、fork しなくても良さそうです。&lt;/p&gt;

&lt;p&gt;後は、先ほど hugo を実行したのと同じ要領で、更に server -watch オプションをつけると、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo  server --watch -t base16
＜略＞
Web Server is available at http://127.0.0.1:1313/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように &lt;a href=&#34;http://127.0.0.1:1313/&#34;&gt;http://127.0.0.1:1313/&lt;/a&gt; で表示が確認できます。
md ファイルを編集するとリアルタイムに反映してくれて便利です。(これが出来なかったら hugo を使おうとしなかった位、大事な機能)&lt;/p&gt;

&lt;p&gt;尚、config.toml (又は config.yaml) で theme を定義すれば -t base16 は不要です。&lt;/p&gt;

&lt;h2 id=&#34;syntax-highlight:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;Syntax Highlight&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/extras/highlighting/&#34;&gt;http://gohugo.io/extras/highlighting/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これの通りに作業します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install Pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、Pygments を入れて。config.toml に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pygmentsuseclasses = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を入れるだけで OK です。&lt;/p&gt;

&lt;h2 id=&#34;テーマの文字:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;テーマの文字&lt;/h2&gt;

&lt;p&gt;base16 は文字が読み辛いので自分好みに変更しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;記事の背景色 (少し明るくした)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;article&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;.single&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;section,&lt;/span&gt;
&lt;span style=&#34;color: #a6e22e&#34;&gt;.article-list&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;article&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef&#34;&gt;background-color&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;#f2f0ec&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #66d9ef&#34;&gt;background-color&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;#fcf8f0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;文字フォント (Windows で見た時に MS ゴシックが使われないように)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color: #960050; background-color: #1e0010&#34;&gt;＜略＞&lt;/span&gt;
  &lt;span style=&#34;color: #66d9ef&#34;&gt;font-family&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Hiragino Kaku Gothic ProN&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Meiryo&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Tahoma&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Verdana&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;Arial&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;sans-serif&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef&#34;&gt;font-family&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Source Code Pro&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;monospace&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id=&#34;circleci:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;CircleCI&lt;/h1&gt;

&lt;p&gt;間に合わなかったので、また今度。。&lt;/p&gt;

&lt;p&gt;(2016/01/02 追記) &amp;gt; &lt;a href=&#34;http://blog.awm.jp/2016/01/02/circleci/&#34;&gt;http://blog.awm.jp/2016/01/02/circleci/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;備考:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;備考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Circle CI のアカウント作成で Github と連携する際に「所属する組織全てのアクセス権限」を要求する(Github API の仕様上、組織毎にオンオフ出来ない)ので、自分が管理する組織にのみ所属するアカウント (awmlabs) を使う事にしました。&lt;/li&gt;
&lt;li&gt;当初、改行がされないと思ったけど、サマリーの方は改行無しで、記事のページに飛んだらちゃんと改行されてました。早とちり。&lt;/li&gt;
&lt;li&gt;色々なテーマを試そうとするとエラーがよく出ます。テーマ毎に md ファイルの先頭で必要な定義が違うみたいで、ちゃんとテーマの README を読んで設定しましょう。&lt;/li&gt;
&lt;li&gt;new 〜.md で作ったテンプレファイルでは draft = true になっているので、これを消すか false にしないと記事を表示しません。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;参考-url:e95c7dc8eefee7d0e25121cd7f0007ae&#34;&gt;参考 URL&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nobu666/nobu666.com&#34;&gt;https://github.com/nobu666/nobu666.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847&#34;&gt;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>